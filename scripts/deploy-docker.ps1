# PAUL Azerbaijan Docker Deployment Script (PowerShell)
# –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä—É–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å –¥–µ–ø–ª–æ—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è

param(
    [switch]$Clean
)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
function Write-Log {
    param([string]$Message, [string]$Type = "Info")
    
    $timestamp = Get-Date -Format "yyyy-MM-dd HH:mm:ss"
    
    switch ($Type) {
        "Error" { Write-Host "[$timestamp] ERROR: $Message" -ForegroundColor Red }
        "Warning" { Write-Host "[$timestamp] WARNING: $Message" -ForegroundColor Yellow }
        "Success" { Write-Host "[$timestamp] $Message" -ForegroundColor Green }
        default { Write-Host "[$timestamp] $Message" -ForegroundColor Cyan }
    }
}

Write-Log "üöÄ –ù–∞—á–∏–Ω–∞–µ–º –¥–µ–ø–ª–æ–π PAUL Azerbaijan..." "Success"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è Docker
try {
    docker --version | Out-Null
    Write-Log "‚úÖ Docker –Ω–∞–π–¥–µ–Ω"
} catch {
    Write-Log "Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker." "Error"
    exit 1
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è Docker Compose
try {
    docker-compose --version | Out-Null
    Write-Log "‚úÖ Docker Compose –Ω–∞–π–¥–µ–Ω"
} catch {
    Write-Log "Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Compose." "Error"
    exit 1
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è .env —Ñ–∞–π–ª–∞
if (-not (Test-Path ".env")) {
    Write-Log ".env —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–æ–∑–¥–∞–µ–º –∏–∑ –ø—Ä–∏–º–µ—Ä–∞..." "Warning"
    if (Test-Path "docker.env.example") {
        Copy-Item "docker.env.example" ".env"
        Write-Log "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ .env —Ñ–∞–π–ª –ø–µ—Ä–µ–¥ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ–º." "Warning"
        Read-Host "–ù–∞–∂–º–∏—Ç–µ Enter –ø–æ—Å–ª–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ .env —Ñ–∞–π–ª–∞"
    } else {
        Write-Log "–§–∞–π–ª docker.env.example –Ω–µ –Ω–∞–π–¥–µ–Ω." "Error"
        exit 1
    }
}

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
Write-Log "–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
docker-compose down

# –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä—ã—Ö –æ–±—Ä–∞–∑–æ–≤ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
if ($Clean) {
    Write-Log "–£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –æ–±—Ä–∞–∑—ã..."
    docker system prune -f
}

# –°–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
Write-Log "–°–æ–±–∏—Ä–∞–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
docker-compose up -d --build

# –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
Write-Log "–û–∂–∏–¥–∞–µ–º –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
Start-Sleep -Seconds 30

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
Write-Log "–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
docker-compose ps

# –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π
Write-Log "–í—ã–ø–æ–ª–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
docker-compose exec -T backend php artisan migrate --force

# –ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Laravel
Write-Log "–ö–µ—à–∏—Ä—É–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é Laravel..."
docker-compose exec -T backend php artisan config:cache
docker-compose exec -T backend php artisan route:cache
docker-compose exec -T backend php artisan view:cache

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–∏—Å–æ–≤
Write-Log "–ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–¥–æ—Ä–æ–≤—å–µ —Å–µ—Ä–≤–∏—Å–æ–≤..."

# –ü—Ä–æ–≤–µ—Ä–∫–∞ MySQL
try {
    docker-compose exec -T mysql mysqladmin ping -h localhost --silent
    Write-Log "‚úÖ MySQL —Ä–∞–±–æ—Ç–∞–µ—Ç" "Success"
} catch {
    Write-Log "‚ùå MySQL –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç" "Error"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Redis
try {
    $redisResult = docker-compose exec -T redis redis-cli ping
    if ($redisResult -match "PONG") {
        Write-Log "‚úÖ Redis —Ä–∞–±–æ—Ç–∞–µ—Ç" "Success"
    } else {
        Write-Log "‚ùå Redis –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç" "Error"
    }
} catch {
    Write-Log "‚ùå Redis –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç" "Error"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Backend
try {
    $null = Invoke-WebRequest -Uri "http://localhost/api/health" -TimeoutSec 5 -ErrorAction Stop
    Write-Log "‚úÖ Backend API —Ä–∞–±–æ—Ç–∞–µ—Ç" "Success"
} catch {
    Write-Log "‚ö†Ô∏è Backend API –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (—ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ –µ—Å–ª–∏ –Ω–µ—Ç health endpoint)" "Warning"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Frontend
try {
    $null = Invoke-WebRequest -Uri "http://localhost" -TimeoutSec 5 -ErrorAction Stop
    Write-Log "‚úÖ Frontend —Ä–∞–±–æ—Ç–∞–µ—Ç" "Success"
} catch {
    Write-Log "‚ùå Frontend –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç" "Error"
}

# –ü–æ–∫–∞–∑ –ª–æ–≥–æ–≤
Write-Log "–ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏..."
docker-compose logs --tail=20

Write-Host ""
Write-Log "üéâ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!" "Success"
Write-Host ""
Write-Host "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ –ø–æ –∞–¥—Ä–µ—Å—É:"
Write-Host "  Frontend: http://localhost"
Write-Host "  Backend API: http://localhost/api"
Write-Host ""
Write-Host "–ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
Write-Host "  –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤: docker-compose logs -f"
Write-Host "  –û—Å—Ç–∞–Ω–æ–≤–∫–∞: docker-compose down"
Write-Host "  –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫: docker-compose restart"
Write-Host "  –°—Ç–∞—Ç—É—Å: docker-compose ps"
Write-Host ""
